# server mode, all client connections will connect to a single tun or tap device
mode server
# act as the server with TLS layers activated
tls-server
# tun or tap
dev tun
# protocal: tcp-server or udp
proto tcp-server
# OpenVPN server listen on which port
port 5287
# for TLS-Auth static (embedded) key mode, server side value is 0
key-direction 0
# encryption for data channel
cipher AES-256-CBC
# HMAC algorithm used for the control channel
auth SHA256
# drop the privileges for the vpn users, access control
user nobody
group nogroup
# redirect all traffic through the VPN
push "redirect-gateway def1 bypass-dhcp"
# Use specific DNS servers
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
# DHCP IP address pool
server 10.8.0.0 255.255.255.0
# allow client to use the same certificate and key to access VPN
duplicate-cn
# to avoid auto disconnected for connections
reneg-sec 0
# policy-level control over OpenVPN’s usage of external programs and scripts
# 1: only built-in executable. ex: ifonfig、ls、cat ...
# 2: built-in executable and user-defined scripts
# 3: Allow passwords to be passed to scripts via environmental variables (potentially unsafe)
script-security 2
# authentication, use our self-defined script to authenticate clint side.
# via-file: OpenVPN will create file in /tmp/xxxxx, and pass it as an argument to our script
# via-env: OpenVPN will pass username and password as environment named username and password
auth-user-pass-verify "/usr/bin/verify.py /opt/secret" via-file
# use authenticated without certificate verify
verify-client-cert none
# use authentication name as login name
username-as-common-name
# certificate of Certificate Authority
ca /etc/openvpn/pki/ca.crt
# certificate of server side
cert /etc/openvpn/pki/server.crt
# key file of server side
key /etc/openvpn/pki/server.key
# tls-auth shared-secret key
tls-auth /etc/openvpn/pki/ta.key 0
# DH prime number
dh /etc/openvpn/pki/dh.pem
# OpenVPN Log file
log /var/log/openvpn/openvpn.log
